#!/bin/sh
#
# This file is part of personal-website which is released under MIT license.
# See file LICENSE.txt or go to https://github.com/matejkosiarcik/personal-website for full license details.
#

# setup
set -euf
cd "$(dirname "${0}")/.."
. "./utils/internal/helpers.sh"

# parse arguments
configuration="debug"
while getopts "hc:" argument; do
    case "${argument}" in
        c) configuration="${OPTARG}" ;;
    esac
done

# validate arguments
if [ "${configuration}" != "debug" ] && [ "${configuration}" != "release" ]; then
    printf "%s\n" "Unrecognized mode: '${configuration}'"
    exit 1
fi

# helpers
build_path() {
    printf "%s" "${1}" | sed "s~./src~~" | sed "s~/shared~_include~" | sed "s~/pages/~~"
}

# prepare output directory
output="./build/${configuration}"
rm -rf "${output}" && mkdir -p "${output}"
find "./src" -type d -depth 2 | while IFS= read -r directory; do
    directory="$(build_path "${directory}")"
    mkdir -p "${output}/${directory}"
done

# Markup
find "./src/pages" -type d -depth 1 | while IFS= read -r dir; do
    target="${output}/$(build_path "${dir}")"
    python "./utils/internal/build-mustache.py" --data "${dir}" --output "${target}"
done

# Styles
find "./src" -type f -name "*.scss" -not -name "_*" | while IFS= read -r file; do
    target="${output}/$(build_path "${file}")"
    target="$(dirname "${target}")/$(basename "${target}" ".scss").css"
    sass --scss --unix-newlines --style=expanded --load-path="./src/shared/styles" "${file}" "${target}"
    printf "%s\n" "$(cssbeautify "${target}")" >"${target}"
done

# Create symlinks from index to home
find "./build/${configuration}/home" -type f | while IFS= read -r file; do
    name="$(basename "${file}")"
    ln -s "home/${name}" "${output}/${name}"
done

# Correct whitespace in generated files
find "./build/${configuration}" -type f | while IFS= read -r file; do
    strip "${file}"
done
